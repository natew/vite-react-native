services:
  pgdb:
    image: postgres:16.2-alpine
    shm_size: 1g
    user: postgres
    restart: always
    healthcheck:
      test: 'pg_isready -U user --dbname=postgres'
      interval: 1s
      timeout: 5s
      retries: 10
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: user
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: password
    command: |
      postgres 
      -c wal_level=logical
      -c max_wal_senders=10 
      -c max_replication_slots=5 
      -c hot_standby=on 
      -c hot_standby_feedback=on
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./src/postgres/:/docker-entrypoint-initdb.d

  seeder:
    image: oven/bun:latest
    depends_on:
      pgdb:
        condition: service_healthy
    volumes:
      - ./src/postgres/:/app
    working_dir: /app
    env_file:
      - .env
    command: sh -c "bun install && bun run seed.ts"

  search:
    image: typesense/typesense:27.1
    ports:
      - 8108:8108
    volumes:
      - search:/data
    env_file:
      - .env
    command: 
        - '--data-dir'
        - '/data'
        - '--api-key=${TYPESENSE_API_KEY}'
        - '--enable-cors'

  # zero:
  #   image: node:alpine
  #   depends_on:
  #     pgdb:
  #       condition: service_healthy
  #   volumes:
  #     - .:/app
  #     - zero_node_modules:/app/src/zero/node_modules
  #   working_dir: /app/src/zero
  #   env_file:
  #     - .env
  #   environment:
  #     - ZERO_AUTH_JWKS_URL=http://host.docker.internal:8081/api/auth/jwks
  #     - ZERO_UPSTREAM_DB=${DOCKER_UPSTREAM_DB}
  #     - ZERO_CVR_DB=${DOCKER_CVR_DB}
  #     - ZERO_CHANGE_DB=${DOCKER_CHANGE_DB}
  #   ports:
  #     - "4848:4848"
  #   extra_hosts:
  #     - "host.docker.internal:host-gateway"
  #   command: sh -c "npm install && npx zero-cache"

  # almost working, but needs to expose 0.0.0.0 i think and not picking it up
  # app:
  #   image: oven/bun:latest
  #   depends_on:
  #     - zero
  #   volumes:
  #     - .:/app
  #     # avoid node_modules
  #     - app_node_modules:/app/node_modules
  #   working_dir: /app
  #   env_file:
  #     - .env
  #   environment:
  #     - VITE_PUBLIC_ZERO_SERVER=http://zero:4848
  #   ports:
  #     - "8081:8081"
  #   command: sh -c "bun install && bun run dev"

volumes:
  search:
    driver: local
  pgdata:
    driver: local
  app_node_modules:
    driver: local
  zero_node_modules:
    driver: local
